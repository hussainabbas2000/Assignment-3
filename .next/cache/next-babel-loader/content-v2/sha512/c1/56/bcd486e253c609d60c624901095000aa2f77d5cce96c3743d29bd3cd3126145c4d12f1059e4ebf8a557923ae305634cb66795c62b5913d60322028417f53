{"ast":null,"code":"function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { subcategory } from 'react-storefront-connector';\nexport default async function plp(req, res) {\n  // Note: the structure of the query string is controlled by the queryForState prop passed\n  // to SearchResultsProvider in pages/s/[...categorySlug].js.\n  const _req$query = req.query,\n        {\n    q,\n    categorySlug: slug,\n    page,\n    sort,\n    _includeAppData\n  } = _req$query,\n        others = _objectWithoutProperties(_req$query, [\"q\", \"categorySlug\", \"page\", \"sort\", \"_includeAppData\"]);\n\n  const filters = [];\n\n  for (let [key, values] of Object.entries(others)) {\n    for (let value of values.split(',')) {\n      filters.push(`${key}:${value}`);\n    }\n  }\n\n  res.json(await subcategory({\n    q,\n    slug,\n    page,\n    filters: JSON.stringify(filters),\n    sort\n  }, req, res));\n}","map":{"version":3,"sources":["C:/Users/Hussain/Desktop/f/app/pages/api/s/[...categorySlug].js"],"names":["subcategory","plp","req","res","query","q","categorySlug","slug","page","sort","_includeAppData","others","filters","key","values","Object","entries","value","split","push","json","JSON","stringify"],"mappings":";;;;AAAA,SAASA,WAAT,QAA4B,4BAA5B;AAEA,eAAe,eAAeC,GAAf,CAAmBC,GAAnB,EAAwBC,GAAxB,EAA6B;AAC1C;AACA;AACA,qBAA0ED,GAAG,CAACE,KAA9E;AAAA,QAAM;AAAEC,IAAAA,CAAF;AAAKC,IAAAA,YAAY,EAAEC,IAAnB;AAAyBC,IAAAA,IAAzB;AAA+BC,IAAAA,IAA/B;AAAqCC,IAAAA;AAArC,GAAN;AAAA,QAA+DC,MAA/D;;AACA,QAAMC,OAAO,GAAG,EAAhB;;AAEA,OAAK,IAAI,CAACC,GAAD,EAAMC,MAAN,CAAT,IAA0BC,MAAM,CAACC,OAAP,CAAeL,MAAf,CAA1B,EAAkD;AAChD,SAAK,IAAIM,KAAT,IAAkBH,MAAM,CAACI,KAAP,CAAa,GAAb,CAAlB,EAAqC;AACnCN,MAAAA,OAAO,CAACO,IAAR,CAAc,GAAEN,GAAI,IAAGI,KAAM,EAA7B;AACD;AACF;;AAEDd,EAAAA,GAAG,CAACiB,IAAJ,CACE,MAAMpB,WAAW,CACf;AACEK,IAAAA,CADF;AAEEE,IAAAA,IAFF;AAGEC,IAAAA,IAHF;AAIEI,IAAAA,OAAO,EAAES,IAAI,CAACC,SAAL,CAAeV,OAAf,CAJX;AAKEH,IAAAA;AALF,GADe,EAQfP,GARe,EASfC,GATe,CADnB;AAaD","sourcesContent":["import { subcategory } from 'react-storefront-connector'\n\nexport default async function plp(req, res) {\n  // Note: the structure of the query string is controlled by the queryForState prop passed\n  // to SearchResultsProvider in pages/s/[...categorySlug].js.\n  const { q, categorySlug: slug, page, sort, _includeAppData, ...others } = req.query\n  const filters = []\n\n  for (let [key, values] of Object.entries(others)) {\n    for (let value of values.split(',')) {\n      filters.push(`${key}:${value}`)\n    }\n  }\n\n  res.json(\n    await subcategory(\n      {\n        q,\n        slug,\n        page,\n        filters: JSON.stringify(filters),\n        sort,\n      },\n      req,\n      res\n    )\n  )\n}\n"]},"metadata":{},"sourceType":"module"}